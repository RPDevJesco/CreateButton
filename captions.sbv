0:00:00.599,0:00:06.419
Salutations, I’m Jesco and you’re watching
GameDevMadeEasy.

0:00:06.419,0:00:10.960
This is the final video that I will have made
while living in China!

0:00:10.960,0:00:15.150
In the video today, we are going to work with
DragonRuby.

0:00:15.150,0:00:20.360
(Record Scratch and crowd gasp)
DragonRuby is a game engine made using the

0:00:20.360,0:00:22.370
Ruby programming language.

0:00:22.370,0:00:27.610
(crowd groan)
Now hear me out, DragonRuby takes the minimalist

0:00:27.610,0:00:33.519
approach to game development and does not
rely on heavy usage of “magic” variables

0:00:33.519,0:00:38.329
or methods that is usually present with the
Ruby programming language.

0:00:38.329,0:00:46.000
So, you can get DragonRuby on itch.io or if
you are like me and found it on Reddit, the

0:00:46.000,0:00:49.440
links are in the description.

0:00:49.440,0:00:54.460
There are some pros and cons to the engine.

0:00:54.460,0:01:00.149
Pros are that it is very easy to pick up and
go with on any operating system, loads of

0:01:00.149,0:01:05.449
sample games and explanations, a beginner
and intermediate primer for the Ruby language

0:01:05.449,0:01:11.020
itself in the samples, and does not require
Ruby to be install on your machine to work

0:01:11.020,0:01:13.770
with the engine.

0:01:13.770,0:01:19.719
The cons are no intellisense for the built
in classes, and no documentation on the full

0:01:19.719,0:01:22.600
api for the engine.

0:01:22.600,0:01:27.791
There is however a basic explanation on the
DragonRuby itch page, but it doesn’t go

0:01:27.791,0:01:31.760
very in depth into this.

0:01:31.760,0:01:37.259
For the tutorial today, we are going to implement
a button from the ground up.

0:01:37.259,0:01:43.700
Before we can do that, we really have to understand
what a button actually is.

0:01:43.700,0:01:50.159
A button in its’ base form is a rectangle,
a label and a click event.

0:01:50.159,0:01:54.969
You can expand upon it by adding an image
to it and a mouse event for mouse over and

0:01:54.969,0:02:03.549
mouse off driving the image as well.

0:02:03.549,0:02:10.050
So after you have unzipped the DragonRuby
or dragonruby gtk lowrez folder.

0:02:10.050,0:02:13.050
Go inside the directory a bit further.

0:02:13.050,0:02:16.800
Go inside of the mygame folder.

0:02:16.800,0:02:19.290
Go inside of the app folder.

0:02:19.290,0:02:26.540
Double click to open main.rb in notepad++
or Visual Studio Code if you are on Windows.

0:02:26.540,0:02:33.830
For Mac, Atom, IntelliJ or Visual Studio Code
are your options.

0:02:33.830,0:02:39.250
We are going to delete everything from the
main.rb file.

0:02:39.250,0:02:42.470
A blank slate if you will.

0:02:42.470,0:02:46.720
Let’s begin by creating a class.

0:02:46.720,0:02:48.860
Write class Button.

0:02:48.860,0:02:56.110
This is similar to any other Object Oriented
language where we are defining out class.

0:02:56.110,0:03:05.250
Directly underneath it, with a tab space,
write attr_accessor.

0:03:05.250,0:03:10.720
This is an attribute that allows for us to
get and set instance variables.

0:03:10.720,0:03:16.750
Write colon outputs comma space colon inputs.

0:03:16.750,0:03:23.510
This allows for us to access the outputs and
inputs methods defined within the engine.

0:03:23.510,0:03:29.810
As you can probably guess, these handle i/o
and rendering.

0:03:29.810,0:03:36.180
Let’s go to a new line and write def Display
Button.

0:03:36.180,0:03:39.610
We are defining our first method of this class.

0:03:39.610,0:03:43.880
Now, let’s add parameters to it.

0:03:43.880,0:03:46.750
You can go with two different ways to handle
this.

0:03:46.750,0:03:54.410
The first way is to just write x comma y comma
text or the second way which is to add an

0:03:54.410,0:04:02.290
opening parenthesis x comma y comma text and
a closing parenthesis.

0:04:02.290,0:04:07.670
Both ways are valid in Ruby, I will go with
the parenthesis approach since I am used to

0:04:07.670,0:04:12.300
C style syntax.

0:04:12.300,0:04:16.620
As you can see, we aren’t defining the types
for these variables.

0:04:16.620,0:04:23.040
That is because Ruby is a dynamically typed
language, just like Python.

0:04:23.040,0:04:29.510
The x variable will be our x position, the
y variable will be our y position and the

0:04:29.510,0:04:33.250
text variable will be our string value.

0:04:33.250,0:04:38.400
The x and y will automatically be inferred
as an integer value unless we use floating

0:04:38.400,0:04:42.280
point values.

0:04:42.280,0:04:48.400
Press the enter button and in the next line
write button underscore border is set to be

0:04:48.400,0:05:01.160
square bracket x comma y comma 150 comma 150
comma 0 comma 0 comma 128 and closing square

0:05:01.160,0:05:05.860
bracket.

0:05:05.860,0:05:13.000
This is an array in Ruby and the values in
order by index is as followed: x position,

0:05:13.000,0:05:20.900
y position, width, height, red, green, blue.

0:05:20.900,0:05:29.940
On the next line write button underscore label
is set to open square bracket x plus 50 comma

0:05:29.940,0:05:36.680
y plus 75 comma text and closing square bracket.

0:05:36.680,0:05:45.330
The values for this array is x position, y
position and the text value.

0:05:45.330,0:05:52.990
On the next line, write outputs dot borders
with two greater than symbols button underscore

0:05:52.990,0:05:54.920
border.

0:05:54.920,0:06:00.139
This is saying that we are taking the output’s
borders and we want it to GET the place where

0:06:00.139,0:06:05.430
the border is defined which is the button
underscore border and request the new border

0:06:05.430,0:06:09.419
to be added from the definition.

0:06:09.419,0:06:13.790
On a new line, let’s do the same thing but
for the label.

0:06:13.790,0:06:20.310
Write outputs dot labels with two greater
than symbols and then write button underscore

0:06:20.310,0:06:24.180
label.

0:06:24.180,0:06:25.889
Now for the tricky part.

0:06:25.889,0:06:29.390
We are going to be registering our click events.

0:06:29.390,0:06:34.419
This will require a nested if statement because
we need to check for a regular click event

0:06:34.419,0:06:40.460
and then we need to check if the click event
happens within the border of our button.

0:06:40.460,0:06:44.590
To do this, we first need to start a new line
and then write.

0:06:44.590,0:06:49.500
If inputs dot mouse dot click.

0:06:49.500,0:06:54.800
This is just subscribing to listen for the
click event from the mouse.

0:06:54.800,0:07:06.110
On a new line, write if inputs dot mouse dot
click dot point dot inside underscore rect

0:07:06.110,0:07:09.200
with a question mark.

0:07:09.200,0:07:14.430
This if statement is checking if we are clicking
inside of the rectangle from an object that

0:07:14.430,0:07:17.090
is of the type rect.

0:07:17.090,0:07:21.050
The question mark designates that this is
nullable.

0:07:21.050,0:07:25.800
The last thing to do on this line is to write
button underscore border.

0:07:25.800,0:07:31.449
This will make the inside rectangle point
to our button border object.

0:07:31.449,0:07:37.110
On the next line write outputs dot labels
with two greater than symbols.

0:07:37.110,0:07:46.750
Write open square bracket 200 comma 300 comma
open quote clicked, closing quote and closing

0:07:46.750,0:07:48.930
square bracket.

0:07:48.930,0:07:54.210
This will generate a new label that will tell
us if the button was clicked or not.

0:07:54.210,0:07:57.090
We aren’t done here yet.

0:07:57.090,0:08:00.240
Write end four times.

0:08:00.240,0:08:05.050
This will be the terminators of the two if
statements we created, our display button

0:08:05.050,0:08:09.940
method and our class.

0:08:09.940,0:08:12.830
Ruby is very similar to Python in these regards.

0:08:12.830,0:08:16.930
Instead of semicolons, we have to use the
word end.

0:08:16.930,0:08:22.730
Visual Basic is similar to this as well.

0:08:22.730,0:08:25.280
That concludes the main bulk of this code.

0:08:25.280,0:08:31.130
As a matter of fact, the implementation details
are done, now we just have to define the tick

0:08:31.130,0:08:36.719
method for our main method that will call
this code and this will run as we intend it

0:08:36.719,0:08:38.300
to.

0:08:38.300,0:08:44.209
On a new line write def tick args.

0:08:44.209,0:08:46.259
This is our main update loop.

0:08:46.259,0:08:53.610
The args is just an informal name for arguments
which we will soon make heavy use of.

0:08:53.610,0:08:59.250
Write dollar sign button is set to be Button
dot new.

0:08:59.250,0:09:02.559
This creates an instance of the button class.

0:09:02.559,0:09:07.910
The dollar sign designates that this is a
global variable.

0:09:07.910,0:09:15.769
On a new line, write dollar sign button dot
outputs is set to be args dot outputs.

0:09:15.769,0:09:22.389
We are specifying that the attr underscore
accessor which called output is the same as

0:09:22.389,0:09:24.970
the arg’s outputs.

0:09:24.970,0:09:33.759
On the next line, write dollar sign button
dot inputs is set to be args dot inputs.

0:09:33.759,0:09:40.200
We are specifying that the attr underscore
accessor which called inputs is the same as

0:09:40.200,0:09:43.850
the arg’s inputs.

0:09:43.850,0:09:49.190
The final line is dollar sign button dot display
button.

0:09:49.190,0:09:56.180
The parameters are 500 comma 400 comma and
the string value of Click.

0:09:56.180,0:10:00.339
We are finally calling that display button
method we defined in the Button class and

0:10:00.339,0:10:03.750
setting the variables required for it.

0:10:03.750,0:10:07.100
Finally, write end.

0:10:07.100,0:10:11.619
Which again, designates that this is the end
of the method block.

0:10:11.619,0:10:17.629
There we have it, you can click on the DragonRuby
dot exe file or the DragonRuby file specific

0:10:17.629,0:10:19.759
for Mac or Linux.

0:10:19.759,0:10:24.389
It will run the program and if you click inside
of the button, it will quickly flash the text

0:10:24.389,0:10:29.040
telling us that this code worked correctly.

0:10:29.040,0:10:33.769
As a Challenge for you guys, go through the
samples for DragonRuby and try to figure out

0:10:33.769,0:10:38.910
how to add images to the Display button method,
make it so after clicking that the text will

0:10:38.910,0:10:43.740
stay shown while the button is being pressed
and fix the alignment bug that is present

0:10:43.740,0:10:48.399
on the text if you use longer text phrases.

0:10:48.399,0:10:52.589
Thank you all for watching and I’ll see
you guys when I return to the USA in the next

0:10:52.589,0:10:57.759
few days where I will be able to record more
content for you guys and showcase my solution

0:10:57.759,0:10:59.060
to the challenge asked of you guys.

0:10:59.060,0:11:00.060
https://www.reddit.com/r/learnprogramming/comments/clbm3t/build_a_game_to_learn_how_to_program_dammit_im/

0:11:00.060,0:11:00.061
https://dragonruby.itch.io/dragonruby-gtk

